<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\code.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\code.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Sun May 19 15:05:15 2024
<BR><P>
<H3>Maximum Stack Usage =         32 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
TIME_Handler &rArr; TIMEHandle &rArr; __2printf
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[3]">KEY0_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[4]">KEY1_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[5]">KEY2_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[6]">KEY3_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[7]">KEY4_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[8]">KEY5_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[9]">KEY6_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[a]">KEY7_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[e]">Reset_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[2]">TIME_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[1]">UART1_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[c]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_cmsdk_cm0.o(.text)
 <LI><a href="#[d]">fputc</a> from fputc.o(i.fputc) referenced from printf1.o(i.__0printf$1)
 <LI><a href="#[b]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[c]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(.text)
</UL>
<P><STRONG><a name="[2b]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[28]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2c]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[2d]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[2e]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[11]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_fini_ (Weak Reference)
</UL>

<P><STRONG><a name="[2f]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[30]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[e]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))

<P><STRONG><a name="[1]"></a>UART1_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = UART1_Handler &rArr; UART1Handle
</UL>
<BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1Handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>TIME_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIME_Handler &rArr; TIMEHandle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMEHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>KEY0_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = KEY0_Handler &rArr; KEY0Handle &rArr; UART1String &rArr; WriteUART1
</UL>
<BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY0Handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>KEY1_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = KEY1_Handler &rArr; KEY1Handle &rArr; UART1String &rArr; WriteUART1
</UL>
<BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY1Handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>KEY2_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = KEY2_Handler &rArr; KEY2Handle &rArr; UART1String &rArr; WriteUART1
</UL>
<BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY2Handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>KEY3_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = KEY3_Handler &rArr; KEY3Handle &rArr; UART1String &rArr; WriteUART1
</UL>
<BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY3Handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>KEY4_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = KEY4_Handler &rArr; KEY4Handle &rArr; UART1String &rArr; WriteUART1
</UL>
<BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY4Handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>KEY5_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = KEY5_Handler &rArr; KEY5Handle &rArr; UART1String &rArr; WriteUART1
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY5Handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>KEY6_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = KEY6_Handler &rArr; KEY6Handle &rArr; UART1String &rArr; WriteUART1
</UL>
<BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY6Handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>KEY7_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = KEY7_Handler &rArr; KEY7Handle &rArr; UART1String &rArr; WriteUART1
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY7Handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>main</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = main &rArr; smg_display &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smg_display
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_Init
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[31]"></a>delay_us</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, code_def.o(.text), UNUSED)

<P><STRONG><a name="[24]"></a>delay_ms</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, code_def.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
</UL>

<P><STRONG><a name="[21]"></a>ReadUART1State</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, code_def.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteUART1
</UL>

<P><STRONG><a name="[20]"></a>WriteUART1</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, code_def.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = WriteUART1
</UL>
<BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadUART1State
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1String
</UL>

<P><STRONG><a name="[22]"></a>UART1String</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, code_def.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART1String &rArr; WriteUART1
</UL>
<BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteUART1
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Scan
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY7Handle
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY6Handle
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY5Handle
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY4Handle
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY3Handle
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY2Handle
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY1Handle
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY0Handle
</UL>

<P><STRONG><a name="[1e]"></a>Key_Scan</STRONG> (Thumb, 638 bytes, Stack size 8 bytes, code_def.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Key_Scan &rArr; UART1String &rArr; WriteUART1
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1String
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f]"></a>smg_display</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, code_def.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = smg_display &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>ReadUART1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, code_def.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1Handle
</UL>

<P><STRONG><a name="[13]"></a>UART1Handle</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, code_def.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = UART1Handle
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadUART1
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Handler
</UL>

<P><STRONG><a name="[1d]"></a>TIME_Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, code_def.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[14]"></a>TIMEHandle</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, code_def.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIMEHandle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_Handler
</UL>

<P><STRONG><a name="[15]"></a>KEY0Handle</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, code_def.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = KEY0Handle &rArr; UART1String &rArr; WriteUART1
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1String
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY0_Handler
</UL>

<P><STRONG><a name="[16]"></a>KEY1Handle</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, code_def.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = KEY1Handle &rArr; UART1String &rArr; WriteUART1
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1String
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY1_Handler
</UL>

<P><STRONG><a name="[17]"></a>KEY2Handle</STRONG> (Thumb, 378 bytes, Stack size 8 bytes, code_def.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = KEY2Handle &rArr; UART1String &rArr; WriteUART1
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1String
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY2_Handler
</UL>

<P><STRONG><a name="[18]"></a>KEY3Handle</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, code_def.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = KEY3Handle &rArr; UART1String &rArr; WriteUART1
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1String
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY3_Handler
</UL>

<P><STRONG><a name="[19]"></a>KEY4Handle</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, code_def.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = KEY4Handle &rArr; UART1String &rArr; WriteUART1
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1String
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY4_Handler
</UL>

<P><STRONG><a name="[1a]"></a>KEY5Handle</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, code_def.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = KEY5Handle &rArr; UART1String &rArr; WriteUART1
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1String
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY5_Handler
</UL>

<P><STRONG><a name="[1b]"></a>KEY6Handle</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, code_def.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = KEY6Handle &rArr; UART1String &rArr; WriteUART1
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1String
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY6_Handler
</UL>

<P><STRONG><a name="[1c]"></a>KEY7Handle</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, code_def.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = KEY7Handle &rArr; UART1String &rArr; WriteUART1
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1String
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY7_Handler
</UL>

<P><STRONG><a name="[32]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smg_display
</UL>

<P><STRONG><a name="[23]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1String
</UL>

<P><STRONG><a name="[10]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[33]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[29]"></a>__0printf$1</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[34]"></a>__1printf$1</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)

<P><STRONG><a name="[27]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMEHandle
</UL>

<P><STRONG><a name="[35]"></a>__I$use$semihosting$fputc</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, iusesemip.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, semi.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[38]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[39]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[d]"></a>fputc</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, fputc.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf1.o(i.__0printf$1)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[2a]"></a>_printf_core</STRONG> (Thumb, 332 bytes, Stack size 88 bytes, printf1.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$1
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[12]"></a>__arm_fini_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_fini
</UL>
<HR></body></html>
